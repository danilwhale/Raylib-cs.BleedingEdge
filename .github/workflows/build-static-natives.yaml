name: Build static natives
on:
  push:
    branches: [ 'main' ]
    paths:
      - 'Raylib-cs.BleedingEdge.Native/**'
      - 'raylib'
      - '.github/workflows/**'
  pull_request:
    branches: [ '*' ]
    paths:
      - 'Raylib-cs.BleedingEdge.Native/**'
      - 'raylib'
      - '.github/workflows/**'

jobs:
  natives:
    strategy:
      matrix:
        name: [ 'linux-x64', 'linux-x86', 'linux-arm64', 'osx-x64', 'osx-arm64', 'win-x64', 'win-x86', 'win-arm64' ]
        include:
          - name: 'linux-x64'
            os: 'ubuntu-latest'
            arch: 'x64'
            platform: 'Desktop'
          - name: 'linux-x86'
            os: 'ubuntu-latest'
            arch: 'i386'
          - name: 'linux-arm64'
            os: 'ubuntu-24.04-arm'
            arch: 'aarch64'
            platform: 'Desktop'
          - name: 'osx-x64'
            os: 'macos-latest'
            arch: 'x86_64'
            platform: 'Desktop'
          - name: 'osx-arm64'
            os: 'macos-latest'
            arch: 'arm64'
            platform: 'Desktop'
          - name: 'win-x64'
            os: 'windows-latest'
            arch: 'x64'
            platform: 'Desktop'
          - name: 'win-x86'
            os: 'windows-latest'
            arch: 'win32'
            platform: 'Desktop'
          - name: 'browser-wasm'
            os: 'ubuntu-latest'
            arch: 'x64'
            platform: 'Web'
          - name: 'win-arm64'
            os: 'windows-11-arm'
            arch: 'arm64'
            platform: 'Desktop'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup compile dependencies
        if: startsWith(matrix.name, 'linux')
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install \
            libasound2-dev \
            libx11-dev \
            libxrandr-dev \
            libxi-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libxcursor-dev \
            libxinerama-dev \
            libwayland-dev \
            libxkbcommon-dev

      - name: Setup compile dependencies for x86_32
        if: matrix.name == 'linux-x86'
        shell: bash
        run: |
          sudo apt-get install gcc-multilib

      - name: Install wasm-tools workload
        if: matrix.name == 'browser-wasm'
        run: |
          dotnet workload install wasm-tools

      - name: Setup emsdk
        if: matrix.name == 'browser-wasm'
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 3.1.71
          actions-cache-folder: 'emsdk-cache'

      - name: Compile native
        run: |
          dotnet build Raylib-cs.BleedingEdge.Native -c Release -r ${{ matrix.name }} /p:CompileShared=false /p:BuildArch=${{ matrix.arch }} /p:BuildPlatform=${{ matrix.platform }}

      - name: Upload native
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-static
          path: Raylib-cs.BleedingEdge.Native/bin/Release/runtimes/**
          if-no-files-found: 'error'